

lappend  depot_archives  [depot_user]/raw/[board]-devices
lappend  depot_archives  [depot_user]/src/[base_src]
lappend  depot_archives  [depot_user]/src/init
lappend  depot_archives  [depot_user]/src/terminal_crosslink


if {[have_board imx8mm_iot_gate]} {
	lappend  depot_archives       [depot_user]/src/imx8mm_platform_drv
	set      platform_drv_binary  imx8mm_platform_drv
} else {
	puts "[board] isn't supported by this run script"
	exit 0
}


lappend build_components drivers/uart/imx


append config {
<config>

	<parent-provides>
		<service name="CPU"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="IRQ"/>
		<service name="LOG"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="ROM"/>
	</parent-provides>

	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>

	<start name="timer" caps="100">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Timer"/> </provides>
	</start>

	<start name="platform_drv" managing_system="yes" caps="400">
		<binary name="} $platform_drv_binary {"/>
		<resource name="RAM" quantum="6M"/>
		<provides> <service name="Platform"/> </provides>
		<config>
			<policy label="uart -> "> <device name="uart4"/> </policy>
		</config>
	</start>

	<start name="terminal_crosslink" caps="100">
		<resource name="RAM" quantum="1M"/>
		<provides>
			<service name="Terminal"/>
		</provides>
	</start>

	<start name="uart" caps="100">
		<binary name="imx_uart"/>
		<resource name="RAM" quantum="2M"/>
		<config carriage_return="no" clock_speed="25000000" baud_rate="9600" mode="RS485"/>
		<route>
			<service name="Platform"> <child name="platform_drv"/>        </service>
			<service name="Terminal"> <child name="terminal_crosslink"/>  </service>
			<service name="Timer">    <child name="timer"/>               </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

</config>
}

create_boot_directory

build $build_components

import_from_depot $depot_archives

install_config $config

build_boot_image [build_artifacts]

run_genode_until forever
